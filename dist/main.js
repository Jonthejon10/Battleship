/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/gameboard-factory.js":
/*!**********************************!*\
  !*** ./src/gameboard-factory.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gameboard\": () => (/* binding */ gameboard)\n/* harmony export */ });\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* eslint-disable no-prototype-builtins */\nvar gameboard = function gameboard(player) {\n  return {\n    owner: player,\n    board: [],\n    fleet: [],\n    noShips: false,\n    createBoard: function createBoard(size) {\n      for (var i = 0; i < size; i++) {\n        this.board.push({\n          hasShip: false,\n          hit: false\n        });\n      }\n    },\n    placeShip: function placeShip(ship, coords) {\n      this.fleet.push(ship);\n\n      for (var i = 0; i < ship.length; i++) {\n        this.board[coords + i].ship = ship;\n      }\n\n      var _iterator = _createForOfIteratorHelper(this.board),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var cell = _step.value;\n\n          if (cell.hasOwnProperty('ship')) {\n            cell.hasShip = true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    },\n    receiveAttack: function receiveAttack(attackCoords) {\n      if (this.board[attackCoords].hasOwnProperty('ship') && this.board[attackCoords].hit !== true) {\n        this.board[attackCoords].ship.hit();\n\n        if (this.board[attackCoords].ship.hits === this.board[attackCoords].ship.length) {\n          this.board[attackCoords].ship.sunk = true;\n        }\n\n        var gameOver = this.fleet.every(function (ship) {\n          return ship.sunk === true;\n        });\n        if (gameOver) this.noShips = true;\n      }\n\n      this.board[attackCoords].hit = true;\n    }\n  };\n};\n\n\n\n//# sourceURL=webpack://battleship/./src/gameboard-factory.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ship_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ship-factory */ \"./src/ship-factory.js\");\n/* harmony import */ var _player_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player-factory */ \"./src/player-factory.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* eslint-disable camelcase */\n\n/* eslint-disable no-undef */\n\n/* eslint-disable no-prototype-builtins */\n\n/* eslint-disable no-unused-vars */\n\n\nvar boards = document.querySelector('#boards');\nvar playerBoard = document.querySelector('#playerBoard');\nvar aiBoard = document.querySelector('#aiBoard');\nvar popupContainer = document.querySelector('#popupContainer');\nvar popup = document.querySelector('#popup');\nvar shipAnnouncement = document.querySelector('#shipTurn'); // creating each grid\n\nfunction createGrid(board, size) {\n  board.style.gridTemplateColumns = \"repeat(\".concat(size, \", 1fr)\");\n  board.style.gridTemplateRows = \"repeat(\".concat(size, \", 1fr)\");\n\n  for (var i = 0; i < size * size; i++) {\n    var cell = document.createElement('div');\n    cell.classList.add('cell');\n    board.appendChild(cell);\n  }\n} // creating ships and gameboards\n\n\nvar player1 = (0,_player_factory__WEBPACK_IMPORTED_MODULE_1__.player)('player1');\nplayer1.gameboard.createBoard(100);\ncreateGrid(playerBoard, 10);\nvar carrier = (0,_ship_factory__WEBPACK_IMPORTED_MODULE_0__.ship)(5, 'carrier');\nvar battleship = (0,_ship_factory__WEBPACK_IMPORTED_MODULE_0__.ship)(4, 'battleship');\nvar cruiser = (0,_ship_factory__WEBPACK_IMPORTED_MODULE_0__.ship)(3, 'cruiser');\nvar submarine = (0,_ship_factory__WEBPACK_IMPORTED_MODULE_0__.ship)(3, 'submarine');\nvar destroyer = (0,_ship_factory__WEBPACK_IMPORTED_MODULE_0__.ship)(2, 'destroyer');\nvar aiCarrier = (0,_ship_factory__WEBPACK_IMPORTED_MODULE_0__.ship)(5, 'carrier');\nvar aiBattleship = (0,_ship_factory__WEBPACK_IMPORTED_MODULE_0__.ship)(4, 'battleship');\nvar aiCruiser = (0,_ship_factory__WEBPACK_IMPORTED_MODULE_0__.ship)(3, 'cruiser');\nvar aiSubmarine = (0,_ship_factory__WEBPACK_IMPORTED_MODULE_0__.ship)(3, 'submarine');\nvar aiDestroyer = (0,_ship_factory__WEBPACK_IMPORTED_MODULE_0__.ship)(2, 'destroyer');\n\nvar playerCellArr = _toConsumableArray(playerBoard.querySelectorAll('.cell'));\n\nvar ai = (0,_player_factory__WEBPACK_IMPORTED_MODULE_1__.player)('AI');\nai.gameboard.createBoard(100);\ncreateGrid(aiBoard, 10);\n\nvar aiCellArr = _toConsumableArray(aiBoard.querySelectorAll('.cell')); // displaying player ships\n\n\nfunction displayShips(board, cellArr) {\n  var _iterator = _createForOfIteratorHelper(board),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var cell = _step.value;\n\n      if (cell.hasOwnProperty('ship')) {\n        var index = board.indexOf(cell);\n        cellArr[index].classList.add('hasShip');\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var _iterator2 = _createForOfIteratorHelper(playerCellArr),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var square = _step2.value;\n\n      if (square.classList.contains('shipHover')) {\n        square.classList.remove('shipHover');\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n} // displaying AI attacks\n\n\nfunction displayAiAttacks() {\n  var _iterator3 = _createForOfIteratorHelper(player1.gameboard.board),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var cell = _step3.value;\n\n      if (cell.hit === true) {\n        var index = player1.gameboard.board.indexOf(cell);\n        playerCellArr[index].classList.add('hit');\n\n        if (playerCellArr[index].classList.contains('hasShip')) {\n          playerCellArr[index].classList.remove('hasShip');\n        }\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n} // turn based attacking\n\n\nfunction attackLogic() {\n  var _iterator4 = _createForOfIteratorHelper(aiCellArr),\n      _step4;\n\n  try {\n    var _loop = function _loop() {\n      var cell = _step4.value;\n      cell.addEventListener('click', function () {\n        var index = aiCellArr.indexOf(cell);\n\n        if (ai.gameboard.board[index].hasShip) {\n          cell.classList.add('hasShip');\n        } else {\n          cell.classList.add('hit');\n        }\n\n        ai.gameboard.receiveAttack(index);\n        ai.aiAttack(player1.gameboard);\n        displayAiAttacks();\n\n        if (ai.gameboard.noShips === true) {\n          alert('Game over, you won !');\n          playerBoard.style.pointerEvents = 'none';\n          aiBoard.style.pointerEvents = 'none';\n        } else if (player1.gameboard.noShips === true) {\n          alert('Game over, you lost :(');\n          playerBoard.style.pointerEvents = 'none';\n          aiBoard.style.pointerEvents = 'none';\n        }\n      });\n    };\n\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n} // player placing ships hover\n\n\nfunction hoverShip(cell, ship) {\n  var i = 0;\n  var x = cell.nextElementSibling; // eslint-disable-next-line no-unmodified-loop-condition\n\n  while (x) {\n    i++;\n    if (i === ship.length) break;\n    x.classList.toggle('shipHover');\n    x = x.nextElementSibling;\n  }\n} // player ship placement\n\n\nfunction placeShips() {\n  var playerAvailableShips = [];\n  playerAvailableShips.push(carrier, battleship, cruiser, submarine, destroyer);\n  shipAnnouncement.textContent = \"Place your \".concat(playerAvailableShips[0].name, \", captain\");\n  var unplaceable = [9, 19, 29, 39, 49, 59, 69, 79, 89, 99];\n  var carrierUnplaceable = [6, 7, 8, 16, 17, 18, 26, 27, 28, 36, 37, 38, 46, 47, 48, 56, 57, 58, 66, 67, 68, 76, 77, 78, 86, 87, 88, 96, 97, 98];\n  var battleshipUnplaceable = carrierUnplaceable.filter(function (x) {\n    return x !== 6 && x !== 16 && x !== 26 && x !== 36 && x !== 46 && x !== 56 && x !== 66 && x !== 76 && x !== 86 && x !== 96;\n  });\n  var cruiserUnplaceable = battleshipUnplaceable.filter(function (x) {\n    return x !== 7 && x !== 17 && x !== 27 && x !== 37 && x !== 47 && x !== 57 && x !== 67 && x !== 77 && x !== 87 && x !== 97;\n  });\n\n  var _iterator5 = _createForOfIteratorHelper(playerCellArr),\n      _step5;\n\n  try {\n    var _loop2 = function _loop2() {\n      var playerCell = _step5.value;\n      playerCell.addEventListener('mouseover', function (e) {\n        e.target.classList.toggle('shipHover');\n        hoverShip(playerCell, playerAvailableShips[0]);\n      });\n      playerCell.addEventListener('mouseleave', function (e) {\n        e.target.classList.toggle('shipHover');\n        hoverShip(playerCell, playerAvailableShips[0]);\n      });\n      playerCell.addEventListener('click', function () {\n        var index = playerCellArr.indexOf(playerCell);\n\n        if (!(playerAvailableShips.length < 1) && !unplaceable.includes(index) && player1.gameboard.board[index + playerAvailableShips[0].length - 1].hasShip === false) {\n          if (playerAvailableShips[0].name === 'carrier' && !carrierUnplaceable.includes(index)) {\n            if (playerAvailableShips[1]) shipAnnouncement.textContent = \"Place your \".concat(playerAvailableShips[1].name, \", captain\");\n            player1.gameboard.placeShip(playerAvailableShips[0], index);\n            playerAvailableShips.shift();\n            displayShips(player1.gameboard.board, playerCellArr);\n          } else if (playerAvailableShips[0].name === 'battleship' && !battleshipUnplaceable.includes(index)) {\n            player1.gameboard.placeShip(playerAvailableShips[0], index);\n            if (playerAvailableShips[1]) shipAnnouncement.textContent = \"Place your \".concat(playerAvailableShips[1].name, \", captain\");\n            playerAvailableShips.shift();\n            displayShips(player1.gameboard.board, playerCellArr);\n          } else if ((playerAvailableShips[0].name === 'cruiser' || playerAvailableShips[0].name === 'submarine') && !cruiserUnplaceable.includes(index)) {\n            player1.gameboard.placeShip(playerAvailableShips[0], index);\n            if (playerAvailableShips[1]) shipAnnouncement.textContent = \"Place your \".concat(playerAvailableShips[1].name, \", captain\");\n            playerAvailableShips.shift();\n            displayShips(player1.gameboard.board, playerCellArr);\n          } else if (playerAvailableShips[0].name === 'destroyer') {\n            player1.gameboard.placeShip(playerAvailableShips[0], index);\n            if (playerAvailableShips[1]) shipAnnouncement.textContent = \"Place your \".concat(playerAvailableShips[1].name, \", captain\");\n            playerAvailableShips.shift();\n            displayShips(player1.gameboard.board, playerCellArr);\n          }\n        }\n\n        if (playerAvailableShips.length < 1) {\n          popupContainer.style.display = 'none';\n          popup.removeChild(playerBoard);\n          boards.insertBefore(playerBoard, aiBoard);\n          playerBoard.style.pointerEvents = 'none';\n        }\n      });\n    };\n\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      _loop2();\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n} // AI placing it's ships random\n\n\nfunction randomlyPlaceAiShips() {\n  var aiAvailableShips = [];\n  aiAvailableShips.push(aiCarrier, aiBattleship, aiCruiser, aiSubmarine, aiDestroyer);\n  var aiChosen;\n\n  if (typeof aiChosen === 'undefined') {\n    aiChosen = [];\n  }\n\n  for (var i = 0; i < 5; i++) {\n    var randomChoice = Math.floor(Math.random() * ai.gameboard.board.length);\n    var shipPlacement = ai.gameboard.board.slice(randomChoice, randomChoice + aiAvailableShips[i].length);\n\n    if (!aiChosen.includes(randomChoice) && randomChoice + aiAvailableShips[i].length < ai.gameboard.board.length && ai.gameboard.board[randomChoice].hasShip === false && ai.gameboard.board[randomChoice + aiAvailableShips[i].length].hasShip === false) {\n      aiChosen.push(randomChoice);\n    } else {\n      while (aiChosen.includes(randomChoice) || randomChoice + aiAvailableShips[i].length >= ai.gameboard.board.length || shipPlacement.some(function (x) {\n        return x.hasShip === true;\n      }) || ai.gameboard.board[randomChoice].hasShip === true || ai.gameboard.board[randomChoice + aiAvailableShips[i].length].hasShip === true) {\n        randomChoice = Math.floor(Math.random() * ai.gameboard.board.length);\n\n        if (!aiChosen.includes(randomChoice) && randomChoice + aiAvailableShips[i].length < ai.gameboard.board.length && ai.gameboard.board[randomChoice].hasShip === false && ai.gameboard.board[randomChoice + aiAvailableShips[i].length].hasShip === false) {\n          aiChosen.push(randomChoice);\n          break;\n        }\n      }\n    }\n\n    ai.gameboard.placeShip(aiAvailableShips[i], aiChosen[i]);\n  }\n} // checks for AI ships overflowing to next column\n\n\nfunction checkForShip() {\n  var lastColumn = [];\n  lastColumn.push(ai.gameboard.board[9], ai.gameboard.board[19], ai.gameboard.board[29], ai.gameboard.board[39], ai.gameboard.board[49], ai.gameboard.board[59], ai.gameboard.board[69], ai.gameboard.board[79], ai.gameboard.board[89]);\n  var firstColumn = [];\n  firstColumn.push(ai.gameboard.board[10], ai.gameboard.board[20], ai.gameboard.board[30], ai.gameboard.board[40], ai.gameboard.board[50], ai.gameboard.board[60], ai.gameboard.board[70], ai.gameboard.board[80], ai.gameboard.board[90]);\n\n  for (var i = 0; i < firstColumn.length; i++) {\n    if (firstColumn[i].hasOwnProperty('ship') && lastColumn[i].hasOwnProperty('ship')) {\n      return false;\n    }\n  }\n}\n\nfunction removeShips() {\n  var _iterator6 = _createForOfIteratorHelper(ai.gameboard.board),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var cell = _step6.value;\n\n      if (cell.hasOwnProperty('ship')) {\n        delete cell.ship;\n        cell.hasShip = false;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n} // replacing overflowing ships\n\n\nfunction replaceShips() {\n  while (checkForShip() === false) {\n    removeShips();\n    randomlyPlaceAiShips();\n\n    if (checkForShip() !== false) {\n      break;\n    }\n  }\n}\n\nvar gameLogic = function () {\n  placeShips();\n  randomlyPlaceAiShips();\n  replaceShips();\n  attackLogic();\n}();\n\nvar git_btn = document.getElementById('git_btn');\ngit_btn.addEventListener('click', function () {\n  window.open('https://github.com/Jonthejon10');\n});\n\n//# sourceURL=webpack://battleship/./src/index.js?");

/***/ }),

/***/ "./src/player-factory.js":
/*!*******************************!*\
  !*** ./src/player-factory.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"player\": () => (/* binding */ player)\n/* harmony export */ });\n/* harmony import */ var _gameboard_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameboard-factory */ \"./src/gameboard-factory.js\");\n\n\nvar player = function player(name) {\n  return {\n    name: name,\n    gameboard: (0,_gameboard_factory__WEBPACK_IMPORTED_MODULE_0__.gameboard)(name),\n    aiPick: [],\n    attack: function attack(board, coords) {\n      board.receiveAttack(coords);\n    },\n    aiAttack: function aiAttack(enemyBoard) {\n      var randomChoice = Math.floor(Math.random() * enemyBoard.board.length);\n\n      if (!this.aiPick.includes(randomChoice)) {\n        this.aiPick.push(randomChoice);\n      } else {\n        while (this.aiPick.includes(randomChoice)) {\n          randomChoice = Math.floor(Math.random() * enemyBoard.board.length);\n\n          if (!this.aiPick.includes(randomChoice)) {\n            this.aiPick.push(randomChoice);\n            break;\n          }\n        }\n      }\n\n      this.attack(enemyBoard, randomChoice);\n      /* computer ai\n       if (!(enemyBoard.board[99] === enemyBoard.board[randomChoice])) {\n          while (enemyBoard.board[randomChoice].hasShip === true) {\n              randomChoice = randomChoice + 1\n              this.attack(enemyBoard, randomChoice)\n              if (enemyBoard.board[randomChoice].hasShip === false) {\n                  break\n              }\n          }\n      } */\n    }\n  };\n};\n\n\n\n//# sourceURL=webpack://battleship/./src/player-factory.js?");

/***/ }),

/***/ "./src/ship-factory.js":
/*!*****************************!*\
  !*** ./src/ship-factory.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ship\": () => (/* binding */ ship)\n/* harmony export */ });\nvar ship = function ship(length, name) {\n  return {\n    name: name,\n    length: length,\n    hits: 0,\n    sunk: false,\n    hit: function hit() {\n      this.hits++;\n    },\n    isSunk: function isSunk() {\n      if (this.length === this.hits) {\n        this.sunk = true;\n      }\n    }\n  };\n};\n\n\n\n//# sourceURL=webpack://battleship/./src/ship-factory.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;